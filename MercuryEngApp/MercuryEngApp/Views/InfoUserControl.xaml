<UserControl x:Class="MercuryEngApp.InfoUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:validator="clr-namespace:MercuryEngApp.Validators"
             xmlns:local="clr-namespace:MercuryEngApp"
             mc:Ignorable="d" 
             VerticalAlignment="Stretch"  HorizontalAlignment="Stretch">
    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid Name="LeftPanleInfo">
            <Grid.RowDefinitions>
                <RowDefinition Height="255"/>
                <RowDefinition Height="145"/>
                <RowDefinition Height="127"/>
            </Grid.RowDefinitions>
            <Border Style="{StaticResource ResourceKey=RoundedBorderBlue}" 
                    Width="550"
                    Height="238" 
                    VerticalAlignment="Top" 
                    Margin="10,5,0,0" 
                    Grid.Column="0" 
                    Grid.Row="0">
                <Grid Name="LeftPanelInfoTop" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="90*"/>
                    </Grid.ColumnDefinitions>

                    <Border Style="{StaticResource ResourceKey=RoundedRectangleBlue}" 
                            Height="40" 
                            VerticalAlignment="Top" 
                            Width="550" 
                            Margin="-2,-2,-2,0" Grid.ColumnSpan="2">

                        <TextBlock Height="27" 
                               Margin="13,8,0,0" 
                               Text="Board Info" 
                                Style="{StaticResource ResourceKey=WhiteLable15ptBold}"/>
                    </Border>

                    <Grid Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="28*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="44"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="41"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Height="17" 
                                   Margin="5,15,0,0" 
                                   Text="Part Number" 
                                   Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                   Grid.Row="1" Grid.Column="1"/>

                        <TextBlock Height="17" 
                                   Margin="5,15,0,0" 
                                   Text="Model Name" 
                                   Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                   Grid.Row="2" Grid.Column="1"/>

                        <TextBlock Height="17" 
                                   Margin="5,15,0,0" 
                                   Text="Hardware Revision" 
                                   Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                   Grid.Row="3" Grid.Column="1"/>

                        <TextBlock Height="17" 
                                   Margin="5,15,0,0" 
                                   Text="Serial Number" 
                                   Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                   Grid.Row="4" Grid.Column="1"/>

                        <Border  Style="{StaticResource ResourceKey=RoundedBorderCombo}" 
                                 Grid.Row="1"
                                 Grid.Column="2"  Width="310" />
                        <ComboBox Width="300" 
                                 Height="25"
                                    IsReadOnly="False"
                                      IsEditable="False"
                                      ItemsSource="{Binding Path=BoardPartNumberList, Mode=TwoWay}"
                                      Name="BoardPartNumberCombo"
                                  Style="{StaticResource ResourceKey=ComboBoxBorder}"
                                 Grid.Row="1" 
                                 Grid.Column="2" 
                                 Margin="3,5,5,5">
                            <ComboBox.SelectedItem>
                                <Binding Path="SelectedBoardPartNumber">
                                    <Binding.ValidationRules>
                                        <validator:ComboBoxRequiredValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.BoardPartNumber}" ErrorMessage="{x:Static local:Resources.ComboBoxNotSelected}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.SelectedItem>
                        </ComboBox>

                        <Border  Style="{StaticResource ResourceKey=RoundedBorderCombo}" 
                                 Grid.Row="2"
                                 Grid.Column="2"  Width="310" />
                        <ComboBox Width="300" 
                                 Height="25"
                                    IsReadOnly="False"
                                      IsEditable="False"
                                      ItemsSource="{Binding Path=BoardModelNameList, Mode=TwoWay}"
                                      Name="BoardModelNameCombo"
                                 Style="{StaticResource ResourceKey=ComboBoxBorder}"
                                 Grid.Row="2" 
                                 Grid.Column="2" 
                                 Margin="3,5,5,5">
                            <ComboBox.SelectedItem>
                                <Binding Path="SelectedBoardModelName">
                                    <Binding.ValidationRules>
                                        <validator:ComboBoxRequiredValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.BoardModelName}" ErrorMessage="{x:Static local:Resources.ComboBoxNotSelected}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.SelectedItem>
                        </ComboBox>

                        <Border  Style="{StaticResource ResourceKey=RoundedBorderCombo}" 
                                 Grid.Row="3"
                                 Grid.Column="2"  Width="310" />
                        <ComboBox Width="300" 
                                 Height="25"
                                    IsReadOnly="False"
                                      IsEditable="False"
                                      ItemsSource="{Binding Path=BoardHardwareRevisionList, Mode=TwoWay}"
                                      Name="BoardHardwareRevCombo"
                                 Style="{StaticResource ResourceKey=ComboBoxBorder}"
                                 Grid.Row="3" 
                                 Grid.Column="2" 
                                 Margin="3,5,5,5" 
                                 Background="White">
                            <ComboBox.SelectedItem>
                                <Binding Path="SelectedHardwareRevision">
                                    <Binding.ValidationRules>
                                        <validator:ComboBoxRequiredValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.BoardHardwareRevision}" ErrorMessage="{x:Static local:Resources.ComboBoxNotSelected}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.SelectedItem>
                        </ComboBox>

                        <TextBox Width="309" 
                                 Name="BoardSerialNumberTextBox"
                                 Height="25" 
                                 Grid.Row="4"
                                 Style="{StaticResource ResourceKey=MainTextbox}"
                                 Grid.Column="2" 
                                 Margin="0,8,5,8">
                            <TextBox.Text>
                                <Binding Path="BoardSerialNumber" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.BoardSerialNumber}" ErrorMessage="Filter cannot be blank."/>
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.BoardSerialNumber}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                        <validator:MaxLengthValidationRule ControlName="{x:Static local:Resources.BoardSerialNumber}" ErrorMessage="{x:Static local:Resources.MaxLength}" MaxLength="20" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Button Content="Read" 
                                    Style="{StaticResource ResourceKey=ButtonStyle1}" 
                                    Grid.Column="2" 
                                    Grid.Row="5" 
                                    Width="125" 
                                    Height="39" 
                                    HorizontalAlignment="Left" 
                                    VerticalAlignment="Top" 
                                    Click="ReadBoardInfoClick"/>

                        <Button Content="Write" 
                                    Style="{StaticResource ResourceKey=ButtonStyle1}" 
                                    Grid.Column="2" 
                                    Grid.Row="5" 
                                    Width="125" 
                                IsEnabled="False"
                                    Height="38" 
                                    HorizontalAlignment="Right" 
                                    VerticalAlignment="Top" 
                                    Click="WriteBoardInfoClick" 
                                    Margin="0,0,5,0"/>

                    </Grid>

                </Grid>
            </Border>

            <Border Style="{StaticResource ResourceKey=RoundedBorderBlue}" 
                    Width="550" 
                    Height="130" 
                    VerticalAlignment="Center" 
                    Margin="10,-20,0,0" 
                    Grid.Column="0" 
                    Grid.Row="1">

                <Grid Name="LeftPanelInfoBottom" >
                    <Border Height="40" 
                            VerticalAlignment="Top" 
                            Style="{StaticResource ResourceKey=RoundedRectangleBlue}"
                            Width="550" 
                            Margin="-2,-2,-2,0"
                            >

                        <TextBlock Height="27" 
                                   Margin="13,8,0,0" 
                                   Text="Channel Assignment" 
                                   Style="{StaticResource ResourceKey=WhiteLable15ptBold}"/>
                    </Border>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="8*"/>
                        </Grid.RowDefinitions>

                        <TextBlock Height="17" 
                                   Margin="13,15,0,0" 
                                   Text="Part Number" 
                                   Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                   Grid.Row="1"/>

                     

                        <TextBox Width="309" Height="25"
                                  Style="{StaticResource ResourceKey=MainTextbox}"
                                  Name="ChannelPartNumber"
                                  Grid.Row="1" 
                                  Grid.Column="1" 
                                  Margin="0,0,5,0">
                            <TextBox.Text>
                                <Binding Path="ChannelNumber" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.ChannelPartNumber}" ErrorMessage="Channel Part Number cannot be blank." />
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.ChannelPartNumber}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Button Content="Read" 
                                Style="{StaticResource ResourceKey=ButtonStyle1}" 
                                Grid.Column="1" 
                                Grid.Row="5" 
                                Width="125" 
                                Height="38" 
                                HorizontalAlignment="Left" 
                                Click="ReadChannelClick"
                                 VerticalAlignment="Top"/>

                        <Button Content="Write" 
                                    Style="{StaticResource ResourceKey=ButtonStyle1}" 
                                    Grid.Column="1" 
                                    Grid.Row="5"
                                IsEnabled="True"
                                    Width="125" 
                                    Height="38" 
                                    HorizontalAlignment="Right" 
                                    Click="WriteChannelClick" 
                                    Margin="0,0,5,0"
                                VerticalAlignment="Top"/>


                    </Grid>

                </Grid>
            </Border>
            <Border Style="{StaticResource ResourceKey=RoundedBorderBlue}" 
                    Width="550" 
                    Height="125" 
                    VerticalAlignment="Center" 
                    Margin="10,-20,0,0" 
                    Grid.Column="0" 
                    Grid.Row="3">

                <Grid Name="LeftPanelOperatingInfoBottom" >
                    <Border Height="40" 
                            VerticalAlignment="Top" 
                            Style="{StaticResource ResourceKey=RoundedRectangleBlue}"
                            Width="550" 
                            Margin="-2,-2,-2,0"
                            >

                        <TextBlock Height="27" 
                                   Margin="13,8,0,0" 
                                   Text="Operating Info" 
                                   Style="{StaticResource ResourceKey=WhiteLable15ptBold}"/>
                    </Border>


                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="15*"/>
                        </Grid.RowDefinitions>

                        <TextBlock Height="17" 
                                   Margin="13,15,0,0" 
                                   Text="Operating Minutes" 
                                   Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                   Grid.Row="1"/>

                        <TextBox Width="309" Height="25"
                                  Style="{StaticResource ResourceKey=MainTextbox}"
                                  Text="{Binding Path=OperatingMinutes, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                  Grid.Row="1" 
                                  Grid.Column="1" 
                                  Margin="0,0,5,0"/>

                        <Button Content="Read" 
                                    Style="{StaticResource ResourceKey=ButtonStyle1}" 
                                    Grid.Column="1" 
                                    Grid.Row="5"
                                    Width="125" 
                                    Height="38" 
                                    HorizontalAlignment="Right" 
                                    Margin="0,0,5,0"
                                Click="ReadOperatingMinutesClick"
                                 VerticalAlignment="Top"/>
                    </Grid>
                </Grid>
            </Border>

        </Grid>

        <Grid Grid.Column="1" Height="560" VerticalAlignment="Top">
            <Border Style="{StaticResource ResourceKey=RoundedBorderBlue}" 
                    Width="745"
                    VerticalAlignment="Top" 
                    Margin="10,5,10,0" 
                    Grid.Column="1" Height="497">

                <Grid Name="rightPanelInfoTop" >
                    <Border  Style="{StaticResource ResourceKey=RoundedRectangleBlue}" Height="40" VerticalAlignment="Top" 
                               Width="744" Margin="-3,-2,-1,0" HorizontalAlignment="Right"/>
                    <TextBlock Height="27" Margin="13,8,0,0" Text="Probe Info" Style="{StaticResource ResourceKey=WhiteLable15ptBold}"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="160"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="43"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                            <RowDefinition Height="34"/>
                        </Grid.RowDefinitions>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="Part Number" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="1"/>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="Model Name" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="2"/>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="Serial Number" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="3"/>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="Physical ID" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="4"/>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="Format ID" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="5"/>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="Center Frequency (MHz)" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="6"/>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="Diameter (mm)" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="7"/>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="Tank Focal Length (mm)" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="8"/>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="Insertion Loss (db)" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="9"/>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="TIC (Normalized at 100% Power)" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="10"/>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="Fractional 3db BW (%)" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="11"/>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="Impedance (ohms)" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="12"/>

                        <TextBlock Height="17" 
                                       Margin="13,15,0,0" 
                                       Text="Phase Angle (degrees)" 
                                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                                       Grid.Row="13"/>
                        <Border  Style="{StaticResource ResourceKey=RoundedBorderCombo}" 
                                 Grid.Row="1"
                                 Grid.Column="1"  />
                        <ComboBox 
                                  Grid.Row="1" 
                                  Grid.Column="1"
                                      IsReadOnly="False"
                                      IsEditable="False"
                                      ItemsSource="{Binding Path=ProbePartNumberList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                       
                                      Margin="0,5,6,7" 
                                      Name="ProbePartNumberCombo"
                                      Style="{StaticResource ResourceKey=ComboBoxBorder}" HorizontalAlignment="Right" Width="277">
                            <ComboBox.SelectedItem>
                                <Binding Path="SelectedProbePartNumber">
                                    <Binding.ValidationRules>
                                        <validator:ComboBoxRequiredValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.ProbePartNumber}" ErrorMessage="{x:Static local:Resources.ComboBoxNotSelected}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.SelectedItem>
                        </ComboBox>

                        <TextBox Height="25"
                                     Name="ProbeModelNameTextBox"
                                     Style="{StaticResource ResourceKey=MainTextbox}" 
                                     Width="290" 
                                     TextAlignment="Center" 
                                     Grid.Row="2" 
                                     Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="ProbeModelName" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.ProbeModelName}" ErrorMessage="Filter cannot be blank."/>
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.ProbeModelName}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                        <validator:MaxLengthValidationRule ControlName="{x:Static local:Resources.ProbeModelName}" ErrorMessage="{x:Static local:Resources.MaxLength}" MaxLength="30"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox Height="25"
                                     Name="ProbeSerialNumberTextBox"
                                     Style="{StaticResource ResourceKey=MainTextbox}"
                                     Width="290" 
                                     TextAlignment="Center" 
                                     Grid.Row="3" 
                                     Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="ProbeSerialNumber" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.ProbeSerialNumber}" ErrorMessage="Filter cannot be blank."/>
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.ProbeSerialNumber}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                        <validator:MaxLengthValidationRule ControlName="{x:Static local:Resources.ProbeSerialNumber}" ErrorMessage="{x:Static local:Resources.MaxLength}" MaxLength="12"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox Height="25"
                                     Name="PhysicalIDTextBox"
                                     Style="{StaticResource ResourceKey=MainTextbox}" 
                                     Width="290" 
                                     TextAlignment="Center" 
                                     Grid.Row="4" 
                                     Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="PhysicalID" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.PhysicalID}" ErrorMessage="Filter cannot be blank."/>
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.PhysicalID}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                        <validator:RangeValidationRule ControlName="{x:Static local:Resources.PhysicalID}" ErrorMessage="{x:Static local:Resources.RangeValue}" StartStange="0" MaxRange="255"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox Height="25"
                                     Name="FormatIDTextBox"
                                     Style="{StaticResource ResourceKey=MainTextbox}" 
                                     Width="290" 
                                     TextAlignment="Center" 
                                     Grid.Row="5" 
                                     Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="FormatID" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.FormatID}" ErrorMessage="Filter cannot be blank."/>
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.FormatID}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                        <validator:RangeValidationRule ControlName="{x:Static local:Resources.FormatID}" ErrorMessage="{x:Static local:Resources.RangeValue}" StartStange="0" MaxRange="255"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox Height="25"
                                     Name="CenterFrequencyTextBox"
                                     Style="{StaticResource ResourceKey=MainTextbox}" 
                                     Width="290" 
                                     TextAlignment="Center" 
                                     Grid.Row="6" 
                                     Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="CenterFrequency" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.CenterFrequency}" ErrorMessage="Filter cannot be blank."/>
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.CenterFrequency}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox Height="25"
                                     Name="DiameterTextBox"
                                     Style="{StaticResource ResourceKey=MainTextbox}" 
                                     Width="290" 
                                     TextAlignment="Center" 
                                     Grid.Row="7" 
                                     Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="Diameter" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.Diameter}" ErrorMessage="Filter cannot be blank."/>
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.Diameter}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox Height="25"
                                     Name="TankFocalTextBox"
                                     Style="{StaticResource ResourceKey=MainTextbox}" 
                                     Width="290" 
                                     TextAlignment="Center" 
                                     Grid.Row="8" 
                                     Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="TankFocalLength" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.TankFocalLength}" ErrorMessage="Filter cannot be blank."/>
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.TankFocalLength}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox Height="25"
                                     Name="InsertionLossTextBox"
                                     Style="{StaticResource ResourceKey=MainTextbox}" 
                                     Width="290" 
                                     TextAlignment="Center" 
                                     Grid.Row="9" 
                                     Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="InsertionLoss" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.InsertionLoss}"  ErrorMessage="Filter cannot be blank."/>
                                        <validator:FloatValidationRule ControlName="{x:Static local:Resources.InsertionLoss}" ErrorMessage="{x:Static local:Resources.MustBeFloat}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox Height="25"
                                     Name="TICTextBox"
                                     Style="{StaticResource ResourceKey=MainTextbox}" 
                                     Width="290" 
                                     TextAlignment="Center" 
                                     Grid.Row="10" 
                                     Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="TIC" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.TIC}" ErrorMessage="Filter cannot be blank."/>
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.TIC}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox Height="25"
                                     Name="FractionalTextBox"
                                     Style="{StaticResource ResourceKey=MainTextbox}" 
                                     Width="290" 
                                     TextAlignment="Center" 
                                     Grid.Row="11" 
                                     Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="Fractional3dbBW" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.Fractional}" ErrorMessage="Filter cannot be blank."/>
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.Fractional}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox Height="25"
                                     Name="ImpedenceTextBox"
                                     Style="{StaticResource ResourceKey=MainTextbox}" 
                                     Width="290" 
                                     TextAlignment="Center" 
                                     Grid.Row="12" 
                                     Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="Impedance" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.Impedance}" ErrorMessage="Filter cannot be blank."/>
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.Impedance}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox Height="25"
                                     Name="PhaseAngleTextBox"
                                     Style="{StaticResource ResourceKey=MainTextbox}" 
                                     Width="290" 
                                     TextAlignment="Center" 
                                     Grid.Row="13" 
                                     Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="PhaseAngleTextBox" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.PhaseAngle}" ErrorMessage="Filter cannot be blank."/>
                                        <validator:NumberValidationRule ControlName="{x:Static local:Resources.PhaseAngle}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Button Content="Read" 
                                        Style="{StaticResource ResourceKey=ButtonStyle1}" 
                                        Grid.Column="2" 
                                        Grid.RowSpan="2" 
                                        Grid.Row="2" 
                                        Width="126" 
                                        Height="45" 
                                        HorizontalAlignment="Center" 
                                        Click="ReadProbeInfoClick" 
                                        Margin="17,0,17,25" 
                                        VerticalAlignment="Bottom"/>

                        <Button Content="Write" 
                                    Style="{StaticResource ResourceKey=ButtonStyle1}" 
                                    Grid.Column="2" 
                                    Grid.Row="4" 
                                IsEnabled="True"
                                    Grid.RowSpan="2" 
                                    Width="126" 
                                    Height="45" 
                                    HorizontalAlignment="Center" 
                                    Click="WriteProbeInfoClick"/>

                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>
