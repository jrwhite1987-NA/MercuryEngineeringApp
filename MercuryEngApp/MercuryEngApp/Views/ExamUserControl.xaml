<UserControl x:Class="MercuryEngApp.ExamUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:clr="clr-namespace:System;assembly=mscorlib"
             xmlns:validator="clr-namespace:MercuryEngApp.Validators"
             xmlns:local="clr-namespace:MercuryEngApp"
             mc:Ignorable="d" VerticalAlignment="Stretch"  HorizontalAlignment="Stretch"
             SizeChanged="ExamControlSizeChanged"
             x:Name="ExamControl">

    <Grid x:Name="ParentGrid" HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400*"/>
            <ColumnDefinition Width="700*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="280"/>
            <RowDefinition Height="295"/>
        </Grid.RowDefinitions>
        <Border Style="{StaticResource ResourceKey=RoundedBorderBlue}" 
                   HorizontalAlignment="Stretch"
                    Height="275" 
                    VerticalAlignment="Top" 
                    Margin="10,5,0,0" 
                    Grid.Column="0" 
                    Grid.Row="0"/>
            <Grid
                VerticalAlignment="Top" 
              HorizontalAlignment="Stretch" 
              Margin="10,5,10,0" 
              Grid.Column="0" 
                  Width="{Binding Path=Column1Width}"
              Grid.Row="0" >
            
                <Grid.ColumnDefinitions>
                <ColumnDefinition Width="140*"/>
                <ColumnDefinition Width="90*"/>
                <ColumnDefinition Width="90*"/>
                <ColumnDefinition Width="90*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Text="Power (%) (0-100)" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Grid.Column="0"
                       Padding="15"/>
            <TextBox Height="29" 
                     FontSize="18" 
                     Name="Power"
                     Style="{StaticResource ResourceKey=MainTextbox}" 
                     Margin="5,2,5,0"
                     Grid.Column="1"                     
                     Validation.ErrorTemplate="{x:Null}">
                <TextBox.Text>
                    <Binding Path="Power" Mode="OneWayToSource" UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.Power}" ErrorMessage="{x:Static local:Resources.TextBoxBlank}"/>
                            <validator:NumberValidationRule ControlName="{x:Static local:Resources.Power}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox  Height="29" 
                      TextWrapping="Wrap" 
                      Text="{Binding Path=PacketPower, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                      FontSize="18" 
                     Margin="5,10,5,0" 
                      VerticalAlignment="Top" 
                      HorizontalAlignment="Stretch"
                      Grid.Column="3"
                      IsReadOnly="True" 
                      Style="{StaticResource ResourceKey=TexboxDisable}">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <Button Content="Send" 
                    Style="{StaticResource ResourceKey=ButtonStyle1}" 
					Height="33"
                    Margin="5,2,5,0"
                    Grid.Column="2"
                    />
            <TextBox   Height="29" Style="{StaticResource ResourceKey=MainTextbox}"
                       FontSize="18" 
                       Grid.Column="1"
                       Grid.Row="1"
                       Margin="5,2,5,0"
                       Name="DepthTextBox"
                       Validation.ErrorTemplate="{x:Null}">
                <TextBox.Text>
                    <Binding Path="Depth" Mode="OneWayToSource" UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.Depth}" ErrorMessage="{x:Static local:Resources.TextBoxBlank}"/>
                            <validator:NumberValidationRule ControlName="{x:Static local:Resources.Depth}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox Height="29" 
                     Style="{StaticResource ResourceKey=TexboxDisable}"
                     Text="{Binding Path=PacketDepth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="18" 
                     Grid.Row="1"
                     Grid.Column="3"
                     HorizontalAlignment="Stretch" 
                    Margin="5,2,5,0" 
                     IsReadOnly="True">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <Button Content="Send"
                    Style="{StaticResource ResourceKey=ButtonStyle1}" 
                    Grid.Row="1"
                    Margin="5,2,5,0"
                    Grid.Column="2"
					Height="33"
                    Click="SendDepth"/>
            <TextBox Height="29" 
                     Style="{StaticResource ResourceKey=MainTextbox}"
                     FontSize="18"  
                     Grid.Row="2"
                     Grid.Column="1"
                     Name="FilterTextBox"
                     Margin="5,2,5,0" Validation.ErrorTemplate="{x:Null}">
                <TextBox.Text>
                    <Binding Path="Filter" Mode="OneWayToSource" UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.Filter}" ErrorMessage="{x:Static local:Resources.TextBoxBlank}"/>
                            <validator:NumberValidationRule ControlName="{x:Static local:Resources.Filter}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox Height="29" 
                     Style="{StaticResource ResourceKey=TexboxDisable}" 
                     Text="{Binding Path=PacketFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="18" 
                     Grid.Row="2"
                     Grid.Column="3"
                     HorizontalAlignment="Stretch" 
                      Margin="5,2,5,0" 
                     IsReadOnly="True">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <Button Content="Send" 
                    Style="{StaticResource ResourceKey=ButtonStyle1}" 
                    Grid.Column="2"
                    Grid.Row="2"
                    Height="33"
                    Margin="5,2,5,0"

                    Click="SendFilter"/>
            <TextBox Height="29" 
                     Style="{StaticResource ResourceKey=MainTextbox}"
                     Name="SVolumeTextBox"
                     FontSize="18"  
                     Grid.Row="3"
                     Margin="5,2,5,0"
                     Grid.Column="1"
                      Validation.ErrorTemplate="{x:Null}">
                <TextBox.Text>
                    <Binding Path="SVol" Mode="OneWayToSource" UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.SVolume}" ErrorMessage="{x:Static local:Resources.TextBoxBlank}"/>
                            <validator:NumberValidationRule ControlName="{x:Static local:Resources.SVolume}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox Height="29" 
                     Style="{StaticResource ResourceKey=TexboxDisable}"
                     Text="{Binding Path=PacketSVol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="18" 
                     Grid.Column="3"
                     HorizontalAlignment="Stretch" 
                     Grid.Row="3"
                     IsReadOnly="True" 
                     Margin="5,2,5,0" >

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <Button Content="Send" 
                    Style="{StaticResource ResourceKey=ButtonStyle1}" 
                    Grid.Column="2"
                    Height="33"
                    Grid.Row="3"
                    Margin="5,2,5,0"
                    Click="SendLength"/>
            <TextBox Height="29" 
                     Style="{StaticResource ResourceKey=MainTextbox}"
                     FontSize="18" 
                     Name="StartDepthTextBox"
                     Grid.Row="4"
                     Grid.Column="1"
                     Margin="5,2,5,0"
                     Validation.ErrorTemplate="{x:Null}">
                <TextBox.Text>
                    <Binding Path="StartDepth" Mode="OneWayToSource" UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <validator:BlankValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.StartDepth}" ErrorMessage="{x:Static local:Resources.TextBoxBlank}"/>
                            <validator:NumberValidationRule ControlName="{x:Static local:Resources.StartDepth}" ErrorMessage="{x:Static local:Resources.MustBeNumber}"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox Height="29" 
                     Style="{StaticResource ResourceKey=TexboxDisable}"
                     Text="{Binding Path=PacketStartDepth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="18" 
                     HorizontalAlignment="Stretch" 
                     Grid.Row="4"
                     Grid.Column="3"
                     IsReadOnly="True" 
                      Margin="5,2,5,0" >

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <Button Content="Send" 
                    Style="{StaticResource ResourceKey=LargeButtonStyle}" 
                    Grid.Column="2"
                    Margin="5,2,5,0"
                    Grid.Row="4"
                    Grid.RowSpan="2"
                    Height="80"
                    Click="SendPRF"/>
            <Border  Style="{StaticResource ResourceKey=RoundedBorderCombo}" 
                     Grid.Column="1"
                     Grid.Row="5"
                     HorizontalAlignment="Stretch"
                     Margin="5,2,5,0"
                    Height="30"  />
            <ComboBox Height="25" 
                      Margin="15,2,15,0"
                      IsReadOnly="False"
                      Grid.Row="5"
                      IsEditable="False"
                      ItemsSource="{Binding Path=PRFList, Mode=TwoWay}"
                      Name="PRFCombo"
                     Style="{StaticResource ResourceKey=ComboBoxBorder}"
                     FontSize="18"
                      Grid.Column="1"
                      Validation.ErrorTemplate="{x:Null}">
                <ComboBox.SelectedItem>
                    <Binding Path="SelectedPRF">
                        <Binding.ValidationRules>
                            <validator:ComboBoxRequiredValidationRule ValidatesOnTargetUpdated="True" ControlName="{x:Static local:Resources.PRF}" ErrorMessage="{x:Static local:Resources.ComboBoxNotSelected}"/>
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedItem>
            </ComboBox>

            <TextBox Height="29" 
                     Text="{Binding Path=PacketPRF, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     FontSize="18" 
                     Grid.Row="5"
                      Margin="5,2,5,0" 
                     HorizontalAlignment="Stretch" 
                     Grid.Column="3"
                     IsReadOnly="True" 
                     Style="{StaticResource ResourceKey=TexboxDisable}">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <TextBlock Text="Depth (mm) (23-146)" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="15" 
                       Grid.Row="1"
                       Grid.Column="0"/>
                
            <TextBlock Text="Filter (Hz) (25-2400)" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="15" 
                       Grid.Row="2"
                       Grid.Column="0"/>
                
            <TextBlock Text="S Volume (mm) (2-12)" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="15" 
                       Grid.Row="3"
                       Grid.Column="0" />
            <TextBlock Text="Start Depth (mm) (23-146)" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="15" 
                       Grid.Column="0"
                       Height="57" 
                       Grid.Row="4"/>
            <TextBlock Text="PRF (k) (5,6.25,8,10,12.5)" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="15" 
                       Grid.Column="0"
                       Grid.Row="5"/>
        </Grid>
        <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="230" Grid.Column="0" Grid.Row="1" Margin="10,5,0,0">
            <Rectangle   
                Stroke="#02486e"  
                RadiusX="8" 
                RadiusY="8" 
                StrokeThickness="2" 
                Margin="0,4,0,-4" />

            <TextBlock Text="To" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="12,5,0,0" 
                       Margin="207,10,0,0" 
                       VerticalAlignment="Top"/>

            <TextBlock Text="Mean (cm/s)" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="20" 
                       Margin="0,22,0,0"/>

            <TextBlock Text="Min (cm/s)" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="20,5,0,0" 
                       Margin="0,78,0,0"/>

            <TextBox Height="29" 
                     Text="{Binding Path=PosMean, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="18" 
                     Style="{StaticResource ResourceKey=TexboxDisable}" 
                     Margin="217,37,273,0" 
                     VerticalAlignment="Top" 
                     Padding="5,2,3,0" 
                     Width="90" 
                     TextAlignment="Center"  
                     IsReadOnly="True">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <TextBlock Text="Max (cm/s)" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="20,5,0,0" 
                       Margin="0,116,0,0"/>

            <TextBlock Text="PI" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="20,5,0,0" 
                       Margin="0,153,0,0"/>

            <TextBlock Text="TIC" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="20,5,0,0" 
                       Margin="0,193,0,0"/>

            <TextBox Height="29" 
                     Text="{Binding Path=PosMin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="18" 
                     Margin="217,75,273,0" 
                     VerticalAlignment="Top" 
                     Padding="5,2,3,0" 
                     Width="90" 
                     TextAlignment="Center"  
                     IsReadOnly="True">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
                <TextBox.Style>
                    <StaticResource ResourceKey="TexboxDisable"/>
                </TextBox.Style>
            </TextBox>
            <TextBox Height="29" 
                     Text="{Binding Path=PosMax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="18" 
                     Margin="217,113,273,0"
                     VerticalAlignment="Top" 
                     Padding="5,2,3,0" 
                     Width="90" 
                     TextAlignment="Center"  
                     IsReadOnly="True">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
                <TextBox.Style>
                    <StaticResource ResourceKey="TexboxDisable"/>
                </TextBox.Style>
            </TextBox>
            <TextBox Height="29"
                     Text="{Binding Path=PosPI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     FontSize="18" 
                     Margin="217,152,273,0"
                     VerticalAlignment="Top" 
                     Padding="5,2,3,0"
                     Width="90" 
                     TextAlignment="Center"  
                     IsReadOnly="True">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
                <TextBox.Style>
                    <StaticResource ResourceKey="TexboxDisable"/>
                </TextBox.Style>
            </TextBox>
            <TextBox Height="29" 
                     Text="{Binding Path=TIC, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="18"
                     Margin="217,190,273,0" 
                     VerticalAlignment="Top" 
                     Padding="5,2,3,0" 
                     Width="90" 
                     TextAlignment="Center"  
                     IsReadOnly="True">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
                <TextBox.Style>
                    <StaticResource ResourceKey="TexboxDisable"/>
                </TextBox.Style>
            </TextBox>
            <TextBlock Text="Away" Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="12,5,0,0" 
                       Margin="327,6,0,0" 
                       VerticalAlignment="Top"
					   HorizontalAlignment="Left"/>

            <TextBox Height="29" 
                     Text="{Binding Path=NegMean, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="18" 
                     Margin="338,37,152,0" 
                     VerticalAlignment="Top" 
                     Padding="5,2,3,0" 
                     Width="90" 
                     TextAlignment="Center"  
                     IsReadOnly="True">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
                <TextBox.Style>
                    <StaticResource ResourceKey="TexboxDisable"/>
                </TextBox.Style>
            </TextBox>

            <TextBox Height="29"
                     Text="{Binding Path=NegMin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="18" 
                     Margin="338,76,152,0" 
                     VerticalAlignment="Top" 
                     Padding="5,2,3,0" 
                     Width="90" 
                     TextAlignment="Center"  
                     IsReadOnly="True">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
                <TextBox.Style>
                    <StaticResource ResourceKey="TexboxDisable"/>
                </TextBox.Style>
            </TextBox>

            <TextBox Height="29"
                     Text="{Binding Path=NegMax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     FontSize="18" 
                     Margin="338,114,152,0" 
                     VerticalAlignment="Top" 
                     Padding="5,2,3,0" 
                     Width="90" 
                     TextAlignment="Center"  
                     IsReadOnly="True">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
                <TextBox.Style>
                    <StaticResource ResourceKey="TexboxDisable"/>
                </TextBox.Style>
            </TextBox>

            <TextBox Height="29" 
                     Text="{Binding Path=NegPI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="18" 
                	 Margin="338,153,152,0" 
                     VerticalAlignment="Top" 
                     Padding="5,2,3,0" Width="90" 
                     TextAlignment="Center"  
                     IsReadOnly="True">

                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </TextBox.Resources>
                <TextBox.Style>
                    <StaticResource ResourceKey="TexboxDisable"/>
                </TextBox.Style>
            </TextBox>


            <Border  Style="{StaticResource ResourceKey=RoundedBorderMainpageCombo}" 
                             Grid.Column="0"  
                             HorizontalAlignment="Right" Width="121" Height="30" Margin="0,149,16,51" Background="#FFEEEEEE"/>
            <ComboBox ItemsSource="{Binding Path=FFTList, Mode=TwoWay}"
                      SelectedItem="{Binding Path=SelectedFFT, UpdateSourceTrigger=PropertyChanged}"
                              Style="{StaticResource ResourceKey=ComboBoxBorder}" 
                              SelectionChanged="SpectrumBinComboboxSelectionChanged" Height="25" Margin="450,152,23,53"/>

            <TextBlock Text="Spectrum Bin" 
                       Style="{StaticResource ResourceKey=WhiteLable15pt}" 
                       Padding="12,5,0,0"
                       Margin="431,120,0,0"/>



            <ToggleButton x:Name="btnEnvelop" Content="Envelope On" 
                    Style="{StaticResource ResourceKey=ButtonStyle2}" 
                    Margin="0,31,10,0" 
                    VerticalAlignment="Top" 
                    Width="133" Height="40"                                      
                    HorizontalAlignment = "Right"
                    Checked="BtnEnvelopChecked"
                    Unchecked="BtnEnvelopUnchecked"/>

            <ToggleButton x:Name = "toggleLimits" Margin="0,72,10,0"
                      VerticalAlignment="Top"  
                      HorizontalAlignment = "Right"
                      Content = "Limits On"
                      Width="134" Height="40"
                          Click="ToggleLimitsClick"

                      Style="{StaticResource ResourceKey=ButtonStyle2}" />

        </Grid>

        <Grid VerticalAlignment="Top" 
              HorizontalAlignment="Left"
              Name="SpectrumGrid"
              Grid.Column="1"
              Width="{Binding Path=Column2Width}"
               
              Grid.Row="0" Margin="10,-0,10,0">
            
            <Slider HorizontalAlignment="Left" 
                    OverridesDefaultStyle="True" 
                    Value="{Binding Path=SliderValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                    Maximum="{Binding Path=SliderMax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                    Minimum="0"
                    Width="{Binding Path=Column2Width}"
               Height="{Binding RelativeSource={RelativeSource FindAncestor,
                           AncestorType={x:Type Grid}},
                           Path=RowDefinitions[0].ActualHeight}"
                    Orientation="Vertical" 
                    Grid.Column="1" 
                    VerticalAlignment="Stretch"  
                    Style="{StaticResource SliderStyle}" 
                    Canvas.ZIndex="3"
                    LostMouseCapture="CusomSliderLostMouseCapture">
                <Slider.Resources>
                    <clr:String  x:Key="textValue">0</clr:String>
                </Slider.Resources>
            </Slider>
            <Grid x:Name="scaleGrid" Width="55" HorizontalAlignment="Left" Height="215" Canvas.ZIndex="1" VerticalAlignment="Center" >

            </Grid>
            <Image Grid.Row="0" 
                   Margin="62,0,10,0" 
                   x:Name="imageSpectrogram" 
                   Stretch="Fill" 
                   Height="205" 
                   Width="{Binding Path=Column2Width}"
                   Panel.ZIndex="2" >

            </Image>

            <Rectangle Stroke="#1c2040"  
                       RadiusX="8" 
                       RadiusY="8" 
                       StrokeThickness="2" 
                       Fill="Black" />

            <Line Stretch="Fill" 
                  Stroke="#FF1C2040" 
                  Y1="1" 
                  HorizontalAlignment="Left" 
                  Margin="60,0,0,0" />
        </Grid>
        <Grid HorizontalAlignment="Stretch" Grid.Column="1" VerticalAlignment="top" Height="230" Grid.Row="1" Margin="10,10,10,0">

            <Slider Name="customDepthSlider" 
                    HorizontalAlignment="Left" 
                  OverridesDefaultStyle="True" 
                    Value="50" 
                    Maximum="87" 
                    Minimum="23" 
                    IsHitTestVisible="False"
                Height="232" Width="705" Orientation="Vertical" Grid.Column="1" VerticalAlignment="Stretch"  
                Style="{StaticResource SliderStyle}"  Canvas.ZIndex="3">
                <Slider.Resources>
                    <clr:String  x:Key="textValue">50</clr:String>
                    <clr:String  x:Key="textUnit">mm</clr:String>
                </Slider.Resources>
            </Slider>
            <Grid x:Name="scaleDepthGrid" Height="210" Width="55" HorizontalAlignment="Left"  
                  Grid.Row="1"
                  Canvas.ZIndex="1" VerticalAlignment="Center" >

            </Grid>
            <Image Grid.Row="1" 
                   Margin="62,0,10,0" 
                   x:Name="imageMmode" 
                   Stretch="Fill" 
                   Panel.ZIndex="2"
                   Height="200">

            </Image>

            <Rectangle Stroke="#1c2040" 
                       RadiusX="8" 
                       RadiusY="8" 
                       StrokeThickness="2" 
                       Fill="Black"/>

            <Line Stretch="Fill" 
                  Stroke="#FF1C2040" 
                  Y1="1" 
                  HorizontalAlignment="Left" 
                  Margin="60,0,0,0"/>
        </Grid>
    </Grid>
</UserControl>
