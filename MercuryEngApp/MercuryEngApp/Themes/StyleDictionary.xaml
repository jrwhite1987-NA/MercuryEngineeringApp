<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="HeaderTextBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Height" Value="36" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Center" />
    </Style>

    <Style x:Key="WhiteLable15pt" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style x:Key="WhiteLable15ptBold" BasedOn="{StaticResource WhiteLable15pt}" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="17" />
    </Style>
    
    <Style x:Key="WhiteLableSub15ptBold" BasedOn="{StaticResource WhiteLable15pt}" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="TextFontSize" TargetType="TextBox">
        <Setter Property="Padding" Value="5,3,0,0"/>
        <Setter Property="FontSize" Value="17" />
        <Setter Property="FontFamily" Value="Arial" />
    </Style>

    <Style x:Key="RedLable17pt" TargetType="TextBlock">
        <Setter Property="FontSize" Value="17" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="#FFE60000" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>


    <Style x:Key="RedLable20pt" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#FFE60000" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!--<TextBox Style>-->
    <Style TargetType="{x:Type TextBox}" x:Key="MainTextbox" BasedOn="{StaticResource TextFontSize}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.46"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#049fdf"/>
                            <Setter Property="BorderThickness" Value="3"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type TextBox}" x:Key="MainTextboxwithoutBorder" BasedOn="{StaticResource TextFontSize}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.46"/>
                        </Trigger>                      
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  x:Key="TexboxDisable" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#FFBBC7CD"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
            </Trigger>
            </Style.Triggers>
    </Style>
    <Style x:Key="RunningText" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="505"/>
        <Setter Property="Margin" Value="10,10,10,20"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Padding" Value="6"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
      
    </Style>


    <Style x:Key="MainWindowText" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height" Value="100"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>

    </Style>

    <!--Password Border CSS-->
    <ControlTemplate x:Key="passwordbox" TargetType="{x:Type PasswordBox}">
        <Border Background="{TemplateBinding Background}" 
        x:Name="Bd" BorderBrush="#049fdf"
        BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="20">
            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#049fdf"/>
                <Setter Property="BorderThickness" Value="5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Button Loging CSS-->
    <Style TargetType="{x:Type Button}" x:Key="ButtonStyle1">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="NA_btn_262x62_selected.png"/>
            </Setter.Value>
        </Setter>
         <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="Foreground" Value="WhiteSmoke" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_262x62_down.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_262x62_down.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_262x62_off.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="LargeButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="NA_btn_exam3_100x90_on.png"/>
            </Setter.Value>
        </Setter>
       
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="Foreground" Value="WhiteSmoke" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_exam3_100x90_down.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_exam3_100x90_down.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_exam3_100x90_off.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonEnvelopeToggle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="NA_btn_exam_Envlope_100x90_on.png"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="Foreground" Value="WhiteSmoke" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Width" Value="280" />
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_exam_Envlope_100x90_down.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_exam_Envlope_100x90_down.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="ButttonSplitL">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="NA_btn_exam_split_l_262x62_on.png"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="98" />
        <Setter Property="Height" Value="42"/>
        <Setter Property="Margin" Value="-10,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="border" 
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_exam_split_l_262x62_selected.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_exam_split_l_262x62_selected.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_exam_split_l_262x62_off.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="ButttonSplitR">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="NA_btn_exam_split_r_262x62_on.png"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="98" />
        <Setter Property="Height" Value="42"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="border" 
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_exam_split_r_262x62_selected.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_exam_split_r_262x62_selected.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_exam_split_r_262x62_off.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Button Clear & Refresh-->

    <Style TargetType="{x:Type Button}" x:Key="ButtonClear">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="NA_Clear_Icon.png"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="17"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_Clear_Selected_Icon.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_Clear_Selected_Icon.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="ButtonMaximise">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="NA_Maximise-_Icon.png"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="17"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_Maximise_Selected_Icon.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_Maximise_Selected_Icon.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonMinimize">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="NA_Minimize_Icon.png"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="17"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_Minimize_Selected_Icon.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_Minimize_Selected_Icon.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--On off Button -->

    <Style TargetType="{x:Type ToggleButton}" x:Key="ButttonTCDON">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="btn_exam_tcd_76x76_off.png"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="35" />
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="border" 
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="btn_exam_tcd_76x76_on.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="btn_exam_tcd_76x76_on.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ToggleButton CSS-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="ButtonStyle2">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="NA_btn_180x60_selected.png"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="60"/>
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="Foreground" Value="WhiteSmoke" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="border" 
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_262x62_down.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_262x62_down.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="NA_btn_262x62_off.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Border rounded corner-->
    
    <Style x:Key="RoundedBorderBlue" TargetType="Border">
        <Setter Property="Control.BorderBrush" Value="#02486e" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!--Rectangle rounded corner-->

    <Style x:Key="RoundedRectangleBlue" BasedOn="{StaticResource RoundedBorderBlue}" TargetType="Border">
        <Setter Property="CornerRadius" Value="8,8,0,0"/>
        <Setter Property="Control.BorderBrush" Value="#02486e" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Background" Value="#FF16223D"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
        
         <!--checkBox Style-->
        <Style x:Key="CheckBoxsize" TargetType="CheckBox">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Padding" Value="10,0,0,10"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="0,-10,0,0"/>
    </Style>
    
            <Style x:Key="FontStyleArial" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>
    
    <Style x:Key="TextBlockCenterWhite25" TargetType="TextBlock" BasedOn="{StaticResource FontStyleArial}">
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Width" Value="48" />
    </Style>
    
    <Style x:Key="SliderLabelSmall" TargetType="TextBlock" BasedOn="{StaticResource FontStyleArial}">
        <Setter Property="FontSize" Value="8" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Width" Value="48" />
    </Style>


    <!--ComboBox Style-->
    <Style x:Key="ComboBoxBorder" TargetType="ComboBox">
        <Setter Property="BorderBrush" Value="#FF049FDF"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="17" />
        <Setter Property="FontFamily" Value="Arial" />
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="3" />
            </Style>
        </Style.Resources>
    </Style>



    <!--<Style TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border CornerRadius="5">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    
    <!--Windows background color change -->

    <Thickness x:Key="SliderBorderThemeThickness">0</Thickness>
    <Thickness x:Key="SliderHeaderThemeMargin">0</Thickness>
    <FontWeight x:Key="SliderHeaderThemeFontWeight">Normal</FontWeight>

    <Style x:Key="SliderThumbStyle" TargetType="Thumb">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid HorizontalAlignment="Stretch">
                        <Image Name="backGroundImage" HorizontalAlignment="Left"
                                   Stretch="Fill"
                                   Source="NA_btn_exam_66x56_on.png" />
                        <Image Name="HLine" Visibility="Visible"
                                   Height="4" 
                                   Margin="56,0,0,0" Stretch="UniformToFill"
                                   HorizontalAlignment="Left" Source="NA_Blue_FulSize_Line.png" />
                        <TextBlock HorizontalAlignment="Left" Text="{DynamicResource ResourceKey=textValue}"
                                       Style="{StaticResource ResourceKey=TextBlockCenterWhite25}" Margin="7,10,0,11"></TextBlock>
                        <TextBlock HorizontalAlignment="Left" Text="{DynamicResource ResourceKey=textUnit}"
                                       Style="{StaticResource ResourceKey=SliderLabelSmall}" Margin="8,34,0,-13"></TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>                                      
                </Grid.ColumnDefinitions>

                <Track x:Name="PART_Track" Grid.Column="0">
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="50" OverridesDefaultStyle="True" Style="{StaticResource SliderThumbStyle}" VerticalAlignment="Top"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Hex Viewer--><!--

    <Style TargetType="DataGridCell" x:Key="ActiveCellStyle">
        <Setter Property="Foreground" Value="#FF0074FF"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsActive}" Value="True">
                <Setter Property="Foreground" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>-->

   
    <!--Lable Font-->
    
     <Style x:Key="Lable25size" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="8"/>
        
    </Style>
    <Style x:Key="RoundedBorderCombo" TargetType="Border">
        <Setter Property="Control.BorderBrush" Value="#FFABADB3" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Height" Value="27"/>
        <Setter Property="Background" Value="#FFEBEBEB"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    
    <Style x:Key="RoundedBorderMainpageCombo" TargetType="Border">
        <Setter Property="Control.BorderBrush" Value="#FFABADB3" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Height" Value="37"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>


    <!--Rounded corners combo box-->
    <Style TargetType="{x:Type ComboBox}" x:Key="roundedCornersComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border Name="roundedCornerComboBoxBorder" BorderThickness="1" CornerRadius="3" ClipToBounds="True" Background="White">

                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" Value="White"/>
                                    </Trigger>

                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Canvas>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBox Name="PART_EditableTextBox"
                                     Panel.ZIndex="0"
                                     Padding="0,0,0,0"
                                     IsHitTestVisible="False"
                                     Height="{TemplateBinding Height}">
                                </TextBox>
                                <ToggleButton Grid.Column="1" Margin="0, 0, 0, 0"
                                         Panel.ZIndex="1"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         BorderBrush="Transparent"
                                         Background="Transparent"
                                         Height="{TemplateBinding Height}"
                                         Width="300"
                                         IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         HorizontalContentAlignment="Right"
                                         ClickMode="Press">

                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver"
                                                    Value="true">
                                                    <Setter Property="Background"
                                                        Value="White" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>

                                    <Path Grid.Column="1"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                      Fill="DodgerBlue" />
                                </ToggleButton>
                                <ContentPresenter Name="ContentSite"
                                              Cursor="Arrow"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          Margin="3,0,0,0">
                                </ContentPresenter>
                                <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" 
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                    <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"                
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border 
                                        x:Name="DropDownBorder"
                                        BorderThickness="1"
                                        CornerRadius="5"
                                        Background="White"
                                        BorderBrush="Black"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>